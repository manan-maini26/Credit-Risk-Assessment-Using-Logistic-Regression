# -*- coding: utf-8 -*-
"""credit scoring project  .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Lzdsm7r8EHOKk7n6IIhQyHTv8X3WbW8b

importing libraries and fucntions
"""

import pandas as pd
import numpy as np

from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import classification_report, confusion_matrix, accuracy_score
from sklearn.linear_model import LogisticRegression

"""importing dataset"""

dataset=pd.read_excel("/content/a_Dataset_CreditScoring.xlsx")

"""Data preparation"""

dataset.shape

dataset.head()

dataset = dataset.drop('ID',axis=1)
dataset.head()

dataset.isna().sum()

dataset=dataset.fillna(dataset.mean())

dataset.isna().sum()

dataset['TARGET'].value_counts()

dataset.groupby('TARGET').mean()

"""Train test splits"""

y = dataset.iloc[:, 0].values
X = dataset.iloc[:, 1:29].values

X_train, X_test, y_train, y_test = train_test_split(X, y,
                                                    test_size=0.2,
                                                    random_state=0,
                                                    stratify=y)

sc = StandardScaler()
X_train = sc.fit_transform(X_train)
X_test = sc.transform(X_test)

"""RISK MODEL BUILDING"""

classifier =  LogisticRegression()
classifier.fit(X_train, y_train)
y_pred = classifier.predict(X_test)

"""MODEL PERFORMANCE"""

print(confusion_matrix(y_test,y_pred))

print(accuracy_score(y_test, y_pred))

"""writing output file"""

predictions = classifier.predict_proba(X_test)
predictions